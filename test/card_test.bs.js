// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Card = require("../src/Card.bs.js");
var Test = require("rescript-test/src/Test.bs.js");
var Caml_obj = require("rescript/lib/js/caml_obj.js");
var TestUtils = require("./TestUtils.bs.js");

function cardResultEqual(message, a, b) {
  return Test.assertion(message, "cardResultEqual", Caml_obj.caml_equal, a, b);
}

Test.test("card isAnyOf", (function (param) {
        var grouped = Card.cardGroup([
              [
                1,
                0
              ],
              [
                2,
                0
              ],
              [
                1,
                1
              ],
              [
                2,
                1
              ],
              [
                1,
                3
              ]
            ]);
        return TestUtils.arrayEqual("grouped array", grouped, [
                    [
                      1,
                      3
                    ],
                    [
                      2,
                      2
                    ]
                  ], (function (param, param$1) {
                      if (param[0] === param$1[0]) {
                        return param[1] === param$1[1];
                      } else {
                        return false;
                      }
                    }));
      }));

Test.test("one", (function (param) {
        var ret = Card.match([[
                1,
                0
              ]]);
        cardResultEqual("match one", ret, {
              TAG: /* Ok */0,
              _0: {
                TAG: /* One */0,
                _0: 1
              }
            });
        var ret$1 = Card.match([
              [
                1,
                0
              ],
              [
                1,
                1
              ]
            ]);
        return cardResultEqual("match one", ret$1, {
                    TAG: /* Ok */0,
                    _0: {
                      TAG: /* Pair */1,
                      _0: 1
                    }
                  });
      }));

Test.test("JokerBomb", (function (param) {
        var ret = Card.match([
              [
                16,
                4
              ],
              [
                17,
                4
              ]
            ]);
        cardResultEqual("JokerBomb", ret, {
              TAG: /* Ok */0,
              _0: /* JokerBomb */0
            });
        var ret$1 = Card.match([
              [
                16,
                4
              ],
              [
                17,
                4
              ],
              [
                1,
                0
              ]
            ]);
        return cardResultEqual("JokerBomb Failed", ret$1, {
                    TAG: /* Error */1,
                    _0: /* PatternAllBranchFailed */5
                  });
      }));

Test.test("Bomb", (function (param) {
        var ret = Card.match([
              [
                3,
                0
              ],
              [
                3,
                1
              ],
              [
                3,
                2
              ],
              [
                3,
                3
              ]
            ]);
        return cardResultEqual("Bomb(3)", ret, {
                    TAG: /* Ok */0,
                    _0: {
                      TAG: /* Bomb */9,
                      _0: 3
                    }
                  });
      }));

exports.cardResultEqual = cardResultEqual;
/*  Not a pure module */
